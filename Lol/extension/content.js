!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}({10:function(e,t){chrome.runtime.onMessage.addListener((e,t,n)=>{e.response=JSON.parse(e.response),function(e){let t=e.timeout.split("-").filter(e=>""!==e).map(e=>parseInt(e)),n=0;t.length<1&&(t=[100,200]),2===t.length?n=Math.floor(Math.random()*Math.abs(t[0]-t[1]))+Math.min(t[0],t[1]):1===t.length&&(n=t[0]),postMessage({id:"xhr-mock-api-message",mockURL:e.mockURL,status:parseInt(e.status),response:JSON.stringify(e.response),delay:n},"*")}(e),n("ok")}),function(){if(void 0===window.xhrMockApi){var e=document.createElement("script");e.id="xhrMockApi",document.getElementsByTagName("body")[0].appendChild(e),e.src=chrome.extension.getURL("broswer/xhr-mock.js")}}()}});