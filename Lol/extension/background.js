(()=>{"use strict";var e,t,o;!function(e){e.MOCK="MOCK",e.DESTROY="DESTROY"}(e||(e={})),function(e){e.CHECK_STATE="checkState",e.DESTROY_MOCK="destroyMock"}(t||(t={}));var n={updateIcon:function(){chrome.tabs.query({active:!0,currentWindow:!0},(function(e){if(0===e.length)return chrome.browserAction.setIcon({path:"icon16-gray.png"}),void chrome.browserAction.disable();var o=e[0].id;void 0!==o&&chrome.tabs.sendMessage(o,{type:t.CHECK_STATE},(function(e){e?(chrome.browserAction.setIcon({path:"icon16.png"}),chrome.browserAction.enable(),n.checkEnableState(o)):(chrome.browserAction.setIcon({path:"icon16-gray.png"}),chrome.browserAction.disable())}))}))},checkEnableState:function(e){chrome.storage.local.get(["enable"],(function(o){!1===o.enable&&chrome.tabs.sendMessage(e,{type:t.DESTROY_MOCK})}))}};chrome.tabs.onUpdated.addListener((function(){clearTimeout(o),o=window.setTimeout(n.updateIcon,100)})),chrome.tabs.onActivated.addListener(n.updateIcon),chrome.runtime.onInstalled.addListener((function(){chrome.contextMenus.create({id:"mock-contextMenus",title:"Lol Mock API Github",contexts:["browser_action"]})})),chrome.contextMenus.onClicked.addListener((function(e){"mock-contextMenus"===e.menuItemId&&chrome.tabs.create({url:"https://github.com/totofish/Lol-Mock-API"})})),n.updateIcon()})();